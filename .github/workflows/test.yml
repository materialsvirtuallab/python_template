name: Testing

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      task:
        type: choice
        options: [tests, release]
        default: tests
        description: Only run tests or release a new version to PyPI after tests pass.

jobs:
  test:
    strategy:
      max-parallel: 20
      matrix:
        python-version: ["3.10"]

    runs-on: ubuntu-latest
    env:
      PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: "python"

    steps:
      - uses: actions/checkout@v4
      - name: Install uv.
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Install dependencies
        run: |
          uv sync
          uv pip install -e .
      - name: pytest
        run: |
          uv run pytest --cov=package tests --color=yes
#      - name: Upload coverage reports to Codecov
#        uses: codecov/codecov-action@v3
#        env:
#          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build:
    needs: test
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && inputs.task == 'release')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: "3.11"
      - run: python -m pip install build
      - name: Build sdist
        run: |
          python -m build --sdist
          python -m build --wheel
      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.*

  release:
    needs: build
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && inputs.task == 'release')
    runs-on: ubuntu-latest
    permissions:
      # For pypi trusted publishing
      id-token: write
    steps:
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist
      - name: Publish to PyPi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
          verbose: true
